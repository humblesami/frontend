{"ast":null,"code":"var _jsxFileName = \"/media/sami/samba/dev/drf/drf-jwt-react/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from 'react';\nimport jwtDecode from 'jwt-decode';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  let [user, setUser] = useState(() => localStorage.getItem('authTokens') ? jwtDecode(localStorage.getItem('authTokens')) : null);\n  let [authTokens, setAuthTokens] = useState(() => localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null);\n  let [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  let loginUser = async e => {\n    e.preventDefault();\n    const response = await fetch('http://127.0.0.1:8000/api/token/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: e.target.username.value,\n        password: e.target.password.value\n      })\n    });\n    let data = await response.json();\n    if (data) {\n      localStorage.setItem('authTokens', JSON.stringify(data));\n      setAuthTokens(data);\n      setUser(jwtDecode(data.access));\n      navigate('/');\n    } else {\n      alert('Something went wrong while logging in the user!');\n    }\n  };\n  let logoutUser = () => {\n    // e.preventDefault()\n    localStorage.removeItem('authTokens');\n    setAuthTokens(null);\n    setUser(null);\n    navigate('/login');\n  };\n  const updateToken = async () => {\n    const response = await fetch('http://127.0.0.1:8000/api/token/refresh/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        refresh: authTokens === null || authTokens === void 0 ? void 0 : authTokens.refresh\n      })\n    });\n    const data = await response.json();\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwtDecode(data.access));\n      localStorage.setItem('authTokens', JSON.stringify(data));\n    } else {\n      logoutUser();\n    }\n    if (loading) {\n      setLoading(false);\n    }\n  };\n  let contextData = {\n    user: user,\n    authTokens: authTokens,\n    loginUser: loginUser,\n    logoutUser: logoutUser\n  };\n  useEffect(() => {\n    if (loading) {\n      updateToken();\n    }\n    const REFRESH_INTERVAL = 1000 * 60 * 4; // 4 minutes\n    let interval = setInterval(() => {\n      if (authTokens) {\n        updateToken();\n      }\n    }, REFRESH_INTERVAL);\n    return () => clearInterval(interval);\n  }, [authTokens, loading]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"iyI7ePhBZ7eA7Wiqxfk88QPJtjQ=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","jwtDecode","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","localStorage","getItem","authTokens","setAuthTokens","JSON","parse","loading","setLoading","navigate","loginUser","e","preventDefault","response","fetch","method","headers","body","stringify","username","target","value","password","data","json","setItem","access","alert","logoutUser","removeItem","updateToken","refresh","status","contextData","REFRESH_INTERVAL","interval","setInterval","clearInterval","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/media/sami/samba/dev/drf/drf-jwt-react/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from 'react'\nimport jwtDecode from 'jwt-decode';\nimport { useNavigate } from 'react-router-dom'\n\nconst AuthContext = createContext()\n\nexport default AuthContext;\n\nexport const AuthProvider = ({children}) => {\n\n    let [user, setUser] = useState(() => (localStorage.getItem('authTokens') ? jwtDecode(localStorage.getItem('authTokens')) : null))\n    let [authTokens, setAuthTokens] = useState(() => (localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null))\n    let [loading, setLoading] = useState(true)\n\n    const navigate = useNavigate()\n\n    let loginUser = async (e) => {\n        e.preventDefault()\n        const response = await fetch('http://127.0.0.1:8000/api/token/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({username: e.target.username.value, password: e.target.password.value })\n        });\n\n        let data = await response.json();\n\n        if(data){\n            localStorage.setItem('authTokens', JSON.stringify(data));\n            setAuthTokens(data)\n            setUser(jwtDecode(data.access))\n            navigate('/')\n        } else {\n            alert('Something went wrong while logging in the user!')\n        }\n    }\n\n    let logoutUser = () => {\n        // e.preventDefault()\n        localStorage.removeItem('authTokens')\n        setAuthTokens(null)\n        setUser(null)\n        navigate('/login')\n    }\n\n    const updateToken = async () => {\n        const response = await fetch('http://127.0.0.1:8000/api/token/refresh/', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/json'\n            },\n            body:JSON.stringify({refresh:authTokens?.refresh})\n        })\n       \n        const data = await response.json()\n        if (response.status === 200) {\n            setAuthTokens(data)\n            setUser(jwtDecode(data.access))\n            localStorage.setItem('authTokens',JSON.stringify(data))\n        } else {\n            logoutUser()\n        }\n\n        if(loading){\n            setLoading(false)\n        }\n    }\n\n    let contextData = {\n        user:user,\n        authTokens:authTokens,\n        loginUser:loginUser,\n        logoutUser:logoutUser,\n    }\n\n    useEffect(()=>{\n        if(loading){\n            updateToken()\n        }\n\n        const REFRESH_INTERVAL = 1000 * 60 * 4 // 4 minutes\n        let interval = setInterval(()=>{\n            if(authTokens){\n                updateToken()\n            }\n        }, REFRESH_INTERVAL)\n        return () => clearInterval(interval)\n\n    },[authTokens, loading])\n\n    return(\n        <AuthContext.Provider value={contextData}>\n            {children}\n        </AuthContext.Provider>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}