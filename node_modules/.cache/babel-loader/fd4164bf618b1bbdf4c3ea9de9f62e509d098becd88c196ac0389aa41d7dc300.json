{"ast":null,"code":"var _jsxFileName = \"/media/sami/samba/dev/drf/drf-jwt-react/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from 'react';\nimport jwtDecode from 'jwt-decode';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  let [user, setUser] = useState(() => localStorage.getItem('authTokens') ? jwtDecode(localStorage.getItem('authTokens')) : null);\n  let [authTokens, setAuthTokens] = useState(() => localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null);\n  let [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  let loginUser = async e => {\n    e.preventDefault();\n    try {\n      // const response = await fetch('http://127.0.0.1:8000/api/token/', {\n      //     method: 'POST',\n      //     headers: {\n      //         'Content-Type': 'application/json'\n      //     },\n      //     body: JSON.stringify({username: e.target.username.value, password: e.target.password.value })\n      // });\n\n      // let data = await response.json();\n\n      // if(data){\n      //     localStorage.setItem('authTokens', JSON.stringify(data));\n      //     setAuthTokens(data)\n      //     setUser(jwtDecode(data.access))\n      //     navigate('/')\n      // } else {\n      //     alert('Something went wrong while logging in the user!')\n      // }\n    } catch (er) {\n      console.log('Error in loginUser', er);\n    }\n  };\n  let logoutUser = () => {\n    // e.preventDefault()\n    localStorage.removeItem('authTokens');\n    setAuthTokens(null);\n    setUser(null);\n    navigate('/login');\n  };\n  const updateToken = async () => {\n    // const response = await fetch('http://127.0.0.1:8000/api/token/refresh/', {\n    //     method: 'POST',\n    //     headers: {\n    //         'Content-Type':'application/json'\n    //     },\n    //     body:JSON.stringify({refresh:authTokens?.refresh})\n    // })\n\n    // const data = await response.json()\n    // if (response.status === 200) {\n    //     setAuthTokens(data)\n    //     setUser(jwtDecode(data.access))\n    //     localStorage.setItem('authTokens',JSON.stringify(data))\n    // } else {\n    //     logoutUser()\n    // }\n\n    // if(loading){\n    //     setLoading(false)\n    // }\n  };\n  let contextData = {\n    user: user,\n    authTokens: authTokens,\n    loginUser: loginUser,\n    logoutUser: logoutUser\n  };\n  useEffect(() => {\n    if (loading) {\n      updateToken();\n    }\n    const REFRESH_INTERVAL = 1000 * 60 * 4; // 4 minutes\n    let interval = setInterval(() => {\n      if (authTokens) {\n        //updateToken();\n      }\n    }, REFRESH_INTERVAL);\n    return () => clearInterval(interval);\n  }, [authTokens, loading]);\n  return (\n    /*#__PURE__*/\n    // <AuthContext.Provider value={contextData}>\n    //     {children}\n    // </AuthContext.Provider>\n    _jsxDEV(\"div\", {\n      children: \"Yess\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(AuthProvider, \"iyI7ePhBZ7eA7Wiqxfk88QPJtjQ=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","jwtDecode","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","localStorage","getItem","authTokens","setAuthTokens","JSON","parse","loading","setLoading","navigate","loginUser","e","preventDefault","er","console","log","logoutUser","removeItem","updateToken","contextData","REFRESH_INTERVAL","interval","setInterval","clearInterval","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/media/sami/samba/dev/drf/drf-jwt-react/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from 'react'\nimport jwtDecode from 'jwt-decode';\nimport { useNavigate } from 'react-router-dom'\n\nconst AuthContext = createContext()\n\nexport default AuthContext;\n\nexport const AuthProvider = ({children}) => {\n\n    let [user, setUser] = useState(() => (localStorage.getItem('authTokens') ? jwtDecode(localStorage.getItem('authTokens')) : null))\n    let [authTokens, setAuthTokens] = useState(() => (localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null))\n    let [loading, setLoading] = useState(true)\n\n    const navigate = useNavigate()\n\n    let loginUser = async (e) => {\n        e.preventDefault();\n        try{\n            // const response = await fetch('http://127.0.0.1:8000/api/token/', {\n            //     method: 'POST',\n            //     headers: {\n            //         'Content-Type': 'application/json'\n            //     },\n            //     body: JSON.stringify({username: e.target.username.value, password: e.target.password.value })\n            // });\n    \n            // let data = await response.json();\n    \n            // if(data){\n            //     localStorage.setItem('authTokens', JSON.stringify(data));\n            //     setAuthTokens(data)\n            //     setUser(jwtDecode(data.access))\n            //     navigate('/')\n            // } else {\n            //     alert('Something went wrong while logging in the user!')\n            // }\n        }\n        catch(er){\n            console.log('Error in loginUser', er);\n        }\n        \n    }\n\n    let logoutUser = () => {\n        // e.preventDefault()\n        localStorage.removeItem('authTokens')\n        setAuthTokens(null)\n        setUser(null)\n        navigate('/login')\n    }\n\n    const updateToken = async () => {\n        // const response = await fetch('http://127.0.0.1:8000/api/token/refresh/', {\n        //     method: 'POST',\n        //     headers: {\n        //         'Content-Type':'application/json'\n        //     },\n        //     body:JSON.stringify({refresh:authTokens?.refresh})\n        // })\n       \n        // const data = await response.json()\n        // if (response.status === 200) {\n        //     setAuthTokens(data)\n        //     setUser(jwtDecode(data.access))\n        //     localStorage.setItem('authTokens',JSON.stringify(data))\n        // } else {\n        //     logoutUser()\n        // }\n\n        // if(loading){\n        //     setLoading(false)\n        // }\n    }\n\n    let contextData = {\n        user:user,\n        authTokens:authTokens,\n        loginUser:loginUser,\n        logoutUser:logoutUser,\n    }\n\n    useEffect(()=>{\n        if(loading){\n            updateToken()\n        }\n\n        const REFRESH_INTERVAL = 1000 * 60 * 4 // 4 minutes\n        let interval = setInterval(()=>{\n            if(authTokens){\n                //updateToken();\n            }\n        }, REFRESH_INTERVAL)\n        return () => clearInterval(interval)\n\n    },[authTokens, loading])\n\n    return(\n        // <AuthContext.Provider value={contextData}>\n        //     {children}\n        // </AuthContext.Provider>\n        <div>Yess</div>\n    )\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,WAAW,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,eAAeO,WAAW;AAE1B,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAExC,IAAI,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,MAAOY,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,GAAGX,SAAS,CAACU,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC,GAAG,IAAK,CAAC;EACjI,IAAI,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,MAAOY,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,GAAGG,IAAI,CAACC,KAAK,CAACL,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC,GAAG,IAAK,CAAC;EAC9I,IAAI,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMoB,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAE9B,IAAIkB,SAAS,GAAG,MAAOC,CAAC,IAAK;IACzBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAG;MACC;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IAAA,CACH,CACD,OAAMC,EAAE,EAAC;MACLC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,EAAE,CAAC;IACzC;EAEJ,CAAC;EAED,IAAIG,UAAU,GAAGA,CAAA,KAAM;IACnB;IACAf,YAAY,CAACgB,UAAU,CAAC,YAAY,CAAC;IACrCb,aAAa,CAAC,IAAI,CAAC;IACnBJ,OAAO,CAAC,IAAI,CAAC;IACbS,QAAQ,CAAC,QAAQ,CAAC;EACtB,CAAC;EAED,MAAMS,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;EAAA,CACH;EAED,IAAIC,WAAW,GAAG;IACdpB,IAAI,EAACA,IAAI;IACTI,UAAU,EAACA,UAAU;IACrBO,SAAS,EAACA,SAAS;IACnBM,UAAU,EAACA;EACf,CAAC;EAED1B,SAAS,CAAC,MAAI;IACV,IAAGiB,OAAO,EAAC;MACPW,WAAW,CAAC,CAAC;IACjB;IAEA,MAAME,gBAAgB,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,EAAC;IACvC,IAAIC,QAAQ,GAAGC,WAAW,CAAC,MAAI;MAC3B,IAAGnB,UAAU,EAAC;QACV;MAAA;IAER,CAAC,EAAEiB,gBAAgB,CAAC;IACpB,OAAO,MAAMG,aAAa,CAACF,QAAQ,CAAC;EAExC,CAAC,EAAC,CAAClB,UAAU,EAAEI,OAAO,CAAC,CAAC;EAExB;IAAA;IACI;IACA;IACA;IACAb,OAAA;MAAAG,QAAA,EAAK;IAAI;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;AAEvB,CAAC;AAAA7B,EAAA,CA/FYF,YAAY;EAAA,QAMJJ,WAAW;AAAA;AAAAoC,EAAA,GANnBhC,YAAY;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}